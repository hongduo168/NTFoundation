<?xml version="1.0" encoding="utf-8"?>
<log4net debug="true">

  <!--按日期分割日志文件 一天一个-->
  <appender name="LogFileAppender" type="log4net.Appender.RollingFileAppender" >
    <filter type="log4net.Filter.LevelRangeFilter">
      <levelMin value="DEBUG" />
      <levelMax value="ERROR" />
    </filter>
    <!--是否续写-->
    <param name="AppendToFile" value="true" />
    <!--最小锁定模型以允许多个进程可以写入同一个文件-->
    <param name="LockingModel" value="log4net.Appender.FileAppender.MinimalLock" />
    <!--保存路径-->
    <param name="File" value="logs/" />
    <param name="DatePattern" value="yyyyMMdd&quot;.log&quot;" />
    <param name="StaticLogFileName" value="false" />
    <param name="RollingStyle" value="Composite" />

    <!--单个文件最大数量 好像只有在 按Size分割时有效-->
    <param name="MaximumFileSize" value="10240KB"/>
    <!--保留的log文件数量 超过此数量后 自动删除之前的   好像只有在 按Size分割时有效-->
    <param name="MaxSizeRollBackups" value="10" />

    <layout type="log4net.Layout.PatternLayout">
      <param name="ConversionPattern" value="%n-----------------------------------------%n%ntime:%d %nlevel:%level %nlogger:%c%nfile:%F line%L %ncontent:%m%n" />
    </layout>
    <!--%m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息  
      %n(new line):换行  
      %d(datetime):输出当前语句运行的时刻  
      %r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数  
      %t(thread id):当前语句所在的线程ID  
      %p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等  
      %c(class):当前日志对象的名称，例如：  
      %f(file):输出语句所在的文件名。  
      %l(line)：输出语句所在的行号。-->
  </appender>

  <!--记录日志到数据库-->
  <appender name="AdoNetAppender" type="log4net.Appender.AdoNetAppender">
    <bufferSize value="2" />
    <!--缓冲大小-->
    <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
    <!--<connectionString value="Data Source=.\SQLEXPRESS;Initial Catalog=CVDS;User ID=sa;Password=sasa" />-->
    <connectionString value="Data Source=10.100.248.12;Initial Catalog=HtEhkLogDb;User ID=sa;Password=1qazXSW@" />
    <commandText value="INSERT INTO Log4Net([ActionTime],[ThreadId],[LogLevel],[LoggerId],[Message],[Exception])VALUES(@log_date, @thread, @log_level, @logger, @message, @exception)" />
    <parameter>
      <parameterName value="@log_date" />
      <dbType value="DateTime" />
      <layout type="log4net.Layout.RawTimeStampLayout" />
    </parameter>
    <parameter>
      <parameterName value="@thread" />
      <dbType value="String" />
      <size value="255" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%t" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@log_level" />
      <dbType value="String" />
      <size value="50" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%p" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@logger" />
      <dbType value="String" />
      <size value="255" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%logger" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@message" />
      <dbType value="String" />
      <size value="255" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%m" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@exception" />
      <dbType value="String" />
      <size value="4000" />
      <layout type="log4net.Layout.ExceptionLayout" />
    </parameter>
  </appender>

  <root>
    <level value="ALL" />
    <!--启用按日期分割-->
    <appender-ref ref="LogFileAppender" />
    <!--启用保存到数据库-->
    <!--<appender-ref ref="AdoNetAppender" />-->
  </root>
  <!--<logger name="AdoNetLogger">
    <level value="ALL"/>
    <appender-ref ref="AdoNetAppender" />
  </logger>-->
</log4net>

<!-- 创建数据库

CREATE TABLE [dbo].[Log4Net](
[LogId] [int] primary key identity NOT NULL,
[ActionTime] [datetime] NOT NULL,
[ThreadId] [varchar](255) NOT NULL,
[LogLevel] [varchar](50) NOT NULL,
[LoggerId] [varchar](255) NOT NULL,
[Message] [nvarchar](255) NOT NULL,
[Exception] [nvarchar](4000) NOT NULL
) ON [PRIMARY]

GO

SET ANSI_PADDING OFF
GO

ALTER TABLE [dbo].[Log4Net] ADD  CONSTRAINT [DF_Log4Net_LoggerId]  DEFAULT ('') FOR [LoggerId]
GO

ALTER TABLE [dbo].[Log4Net] ADD  CONSTRAINT [DF_Log4Net_Message]  DEFAULT ('') FOR [Message]
GO

ALTER TABLE [dbo].[Log4Net] ADD  CONSTRAINT [DF_Log4Net_Exception]  DEFAULT ('') FOR [Exception]
GO
-->
